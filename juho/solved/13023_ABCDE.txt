import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br;
    static BufferedWriter bw;
    static StringTokenizer st;

    static ArrayList<Integer>[] arr;
    static boolean visited[];
    static boolean done;

    static void DFS(int v, int depth)
    {
        if(depth == 5 || done)
        {
            done = true;
            return;
        }
        visited[v] = true;

        for(int i : arr[v])
        {
            if(!visited[i])
            {
                DFS(i, depth + 1);
            }
        }
        visited[v] = false;
    }

    public static void main(String[] args) throws Exception {
        new Main().solution();
    }

    public void solution() throws Exception {
        br = new BufferedReader(new InputStreamReader(System.in));
        //br = new BufferedReader(new InputStreamReader(new FileInputStream("src/main/java/src/input.txt")));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
        arr = new ArrayList[n];
        visited = new boolean[n];

        for(int i = 0; i < n; i++)
        {
            arr[i] = new ArrayList<Integer>();
        }

        for(int i = 0; i < m; i++)
        {
            st = new StringTokenizer(br.readLine());
            int s = Integer.parseInt(st.nextToken());
            int e = Integer.parseInt(st.nextToken());

            arr[s].add(e);
            arr[e].add(s);
        }

        for(int i = 0; i < n; i++)
        {
            DFS(i, 1);

            if(done)
            {
                System.out.println("1");
                return;
            }
        }

        System.out.println("0");


        bw.flush();
        bw.close();
        br.close();
    }
}