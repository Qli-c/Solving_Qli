import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br;
    static BufferedWriter bw;
    static StringTokenizer st;

    static int parent[];

    static void union(int a, int b)
    {
        a = find(a);
        b = find(b);
        if(a != b)
        {
            parent[b] = a;
        }
    }

    static int find(int a)
    {
        if(a == parent[a])
        {
            return a;
        }
        else
        {
            return parent[a] = find(parent[a]);
        }
    }

    public static void main(String[] args) throws Exception {
        new Main().solution();
    }

    public void solution() throws Exception {
        br = new BufferedReader(new InputStreamReader(System.in));
        //br = new BufferedReader(new InputStreamReader(new FileInputStream("src/main/java/src/input.txt")));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());

        parent = new int[n + 1];

        for(int i = 0; i <= n; i++)
        {
            parent[i] = i;
        }

        for(int i = 0; i < m; i++)
        {
            st = new StringTokenizer(br.readLine());
            int q = Integer.parseInt(st.nextToken());
            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());

            if(q == 0)
            {
                union(a,b);
            }
            else
            {
                if (find(a) == find(b))
                {
                    System.out.println("YES");
                }
                else
                {
                    System.out.println("NO");
                }
            }
        }

        bw.flush();
        bw.close();
        br.close();
    }
}
