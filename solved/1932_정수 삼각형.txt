import java.io.*;
import java.lang.reflect.Array;
import java.util.*;

public class Main {
    static BufferedReader br;
    static BufferedWriter bw;
    static StringTokenizer st;

    public static void main(String[] args) throws Exception {
        new Main().solution();
    }

    public void solution() throws Exception {
        br = new BufferedReader(new InputStreamReader(System.in));
        //br = new BufferedReader(new InputStreamReader(new FileInputStream("src/main/java/src/input.txt")));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());

        int dp[][] = new int[n + 1][n + 1];

        st = new StringTokenizer(br.readLine());
        dp[1][1] = Integer.parseInt(st.nextToken());

        int count = 2;

        for(int i = 2; i <= n; i++)
        {
            st = new StringTokenizer(br.readLine());
            for(int j = 1; j <= count; j++)
            {
                int now = Integer.parseInt(st.nextToken());
                if(j == 1)
                {
                    dp[i][j] = dp[i - 1][1] + now;
                }

                else if(j == count)
                {
                    dp[i][j] = dp[i - 1][j - 1] + now;
                }

                else
                {
                    dp[i][j] = Math.max(dp[i - 1][j - 1], dp[i - 1][j]) + now;
                }
            }
            count++;
        }

        Arrays.sort(dp[n]);

        System.out.println(dp[n][n]);

        bw.flush();
        bw.close();
        br.close();
    }
}
