import java.io.*;
import java.lang.reflect.Array;
import java.util.*;

public class Main {
    static BufferedReader br;
    static BufferedWriter bw;
    static StringTokenizer st;

    public static void main(String[] args) throws Exception {
        new Main().solution();
    }

    public void solution() throws Exception {
        br = new BufferedReader(new InputStreamReader(System.in));
        //br = new BufferedReader(new InputStreamReader(new FileInputStream("src/main/java/src/input.txt")));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());

        int distance[][] = new int[n + 1][n + 1];

        for(int i = 1; i <= n; i++)
        {
            String line = br.readLine();
            for(int j = 1; j <= n; j++)
            {
                String sub = line.substring(j - 1, j);

                if(sub.equals("N"))
                {
                    distance[i][j] = 99999999;
                }
                else
                {
                    distance[i][j] = 1;
                }
            }
        }

        for(int k = 1; k <= n; k++)
        {
            for(int i = 1; i <= n; i++)
            {
                for(int j = 1; j <= n; j++)
                {
                    if(i == j)
                    {
                        continue;
                    }
                    distance[i][j] = Math.min(distance[i][j], distance[i][k] + distance[k][j]);
                }
            }
        }

        int max = 0;

        for(int i = 1; i <= n; i++)
        {
            int sum = 0;
            for(int j = 1; j <= n; j++)
            {
                if(distance[i][j] == 1 || distance[i][j] == 2)
                {
                    sum++;
                }
            }
            if(sum > max)
            {
                max = sum;
            }
        }

        System.out.println(max);

        bw.flush();
        bw.close();
        br.close();
    }
}
