import java.io.*;
import java.util.*;

public class Main {
    static BufferedReader br;
    static BufferedWriter bw;
    static StringTokenizer st;

    public static void main(String[] args) throws Exception {
        new Main().solution();
    }

    public void solution() throws Exception {
        br = new BufferedReader(new InputStreamReader(System.in));
        //br = new BufferedReader(new InputStreamReader(new FileInputStream("src/main/java/src/input.txt")));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());

        int arr[] = new int[n];
        int sum = 0;

        st = new StringTokenizer(br.readLine());
        for(int i = 0; i < n; i++)
        {
            arr[i] = Integer.parseInt(st.nextToken());
            sum += arr[i];
        }

        int start = 0;
        int end = 30001;
        int min_max = 99999999;
        int ans_arr[] = new int[m];

        while(start <= end)
        {
            int mid = (start + end) / 2;
            int m_arr[] = new int[m];
            int m_arr2[] = new int[m];
            int count = 0;

            for(int i = 0; i < n; i++)
            {
                if((n - i) == (m - count - 1))
                {
                    for(int j = i; j < n; j++)
                    {
                        count++;
                        m_arr[count] = arr[j];
                        m_arr2[count]++;
                    }
                    break;
                }
                if(m_arr[count] + arr[i] > mid)
                {
                    count++;
                    if(count < m)
                    {
                        m_arr[count] += arr[i];
                        m_arr2[count]++;
                    }
                    else
                    {
                        break;
                    }
                }
                else if(m_arr[count] + arr[i] == mid)
                {
                    m_arr[count] += arr[i];
                    m_arr2[count]++;
                    count++;
                    if(i == n - 1)
                    {
                        count--;
                    }
                    if(count >= m)
                    {
                        break;
                    }
                }
                else
                {
                    m_arr[count] += arr[i];
                    m_arr2[count]++;
                }
            }

            if(count > m - 1)
            {
                start = start + 1;
            }

            else if(count < m - 1)
            {
                end = mid - 1;
            }

            else
            {
                int m_max = 0;
                for(int i = 0; i < m; i++)
                {
                    if(m_arr[i] > m_max)
                    {
                        m_max = m_arr[i];
                    }
                }
                if(m_max < min_max)
                {
                    min_max = m_max;
                    for(int i = 0; i < m; i++)
                    {
                        ans_arr[i] = m_arr2[i];
                    }
                }
                end = end - 1;
            }
        }

        System.out.println(min_max);
        for(int i = 0; i < m; i++)
        {
            bw.write(ans_arr[i] + " ");
        }

        bw.flush();
        bw.close();
        br.close();
    }
}